name: github-action-to-deploy-to-lambda

on: 
 push:
   branches:
    - main*


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2.6.0 
    - name: Setup python
      uses: actions/setup-python@v4.4.0
      with:
        # Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset.
         python-version: 3.8
    - name: Install linting libraries
      run: |
            cd function
            pip install flake8
    - name: Lint with flake8
      run: |
            # Select identifies which errors should cause the job to fail
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # The exit zero flag will show errors as warnings and not fail the run
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v2.6.0 
    - name: Setup python
      uses: actions/setup-python@v4.4.0
      with:
        # Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset.
         python-version: 3.8
    - name: Install libraries
      run: |
         cd function
         python -m pip install --upgrade pip
         if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
    - name: Create zip
      run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
    - name: Archive artifact
      uses: actions/upload-artifact@v2
      with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
    - name: Upload zipped artifact
      uses: actions/upload-artifact@v3.1.1
      with:
         name: zipped-bundle
         path: ${{ github.sha }}.zip
  download:
    needs: build
    runs-on: ubuntu-latest
    steps: 
    - name: Download artifact
      uses: actions/download-artifact@v3.0.1
      with:
         name: zipped-bundle
    - name: "Configure AWS Credentials" 
      uses: aws-actions/configure-aws-credentials@v1
      with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
       aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: us-east-1
    - name: Copy to S3
      run: aws s3 cp ${{ github.sha }}.zip s3://test-bucket-1130912830/${{ github.sha }}.zip
  nonprod:
    needs: download
    strategy:
       matrix:
         input: ["Hello","Hi"]
    runs-on: ubuntu-latest
    steps:
    - name: "Configure AWS Credentials" 
      uses: aws-actions/configure-aws-credentials@v1
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
         aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1
    - name: "Deploy code to lambda"
      run: |
              aws lambda create-function --function-name  test-function-${{ matrix.input }} \
              --code S3Bucket=test-bucket-1130912830,S3Key=${{ github.sha }}.zip \
              --handler lambda_function.lambda_handler --runtime python3.8 \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/service-role/helloworld-role-6hf3jd6t       
    - name: Invoke test function 
      run: |
            aws lambda invoke --function-name test-function-${{ matrix.input }} \
              --payload $(echo "{\"input\": \"${{ matrix.input }}\"}" | base64) \
              --output json out 
            if grep -q "Error" out; then
              exit1
            fi
    - name: "Sleep for some time"
      run: sleep 30
    - name: Destroy env
      if: ${{ always() }}
      run: |
          aws lambda delete-function --function-name test-function-${{ matrix.input }}
     
  deploy:
     needs: nonprod
     runs-on: ubuntu-latest
     steps:
     - name: "Configure AWS Credentials" 
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
         aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1
     - name: "Deploy code to lambda"
       run: |
        aws lambda update-function-code \
              --function-name test-lambda-gh \
              --s3-bucket test-bucket-1130912830 \
              --s3-key ${{ github.sha }}.zip \
              --publish
        
     
     
     
    
      
      
    

